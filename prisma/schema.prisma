// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://cy45nflzfzq2mkt49yd6:pscale_pw_Io5INh41FQG524LizanGkJ8kwSIdHAj3qN6K6uQc7HW@aws.connect.psdb.cloud/irense?sslaccept=strict"
  relationMode = "prisma"
}

model Physician {
  id Int @id @default(autoincrement())
  firstName      String?
  lastName      String?
  phone     String?
  status     Status? @default(active)
  gender      Gender @default(Male)
  email     String   @unique
  image      String?
  password  String
  classifications     DRClassification[] 
  notifications     Notification[] 
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  deletedAt DateTime?

  @@fulltext([firstName, lastName, phone, email])
  // @@fulltext([content, title]
}
model Patient {
  id Int @id @default(autoincrement())
  firstName      String?
  lastName      String?
  phone      String?
  image      String?
  gender      Gender @default(Male)
  email     String   @unique
  classifications     DRClassification[] 
  notifications     Notification[] 
  createdAt DateTime @default(now())
  deletedAt DateTime?
  
  @@fulltext([firstName, lastName, phone, email])
}

model DRClassification {
  id        Int      @id @default(autoincrement())
  eyeSide      String?
  severity      String?
  description      String?

  physician    Physician? @relation(fields: [physicianId], references: [id], onDelete: SetNull)
  physicianId  Int?

  patient   Patient?     @relation(fields: [patientId], references: [id], onDelete: SetNull)
  patientId  Int?

  images    Image[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@fulltext([severity, eyeSide])
  @@index([physicianId])
  @@index([patientId])
}
model Notification {
  id        Int      @id @default(autoincrement())
  message      String?

  physician    Physician? @relation(fields: [physicianId], references: [id], onDelete: SetNull)
  physicianId  Int?

  patient   Patient?     @relation(fields: [patientId], references: [id], onDelete: SetNull)
  patientId  Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@fulltext([message])
  @@index([physicianId])
  @@index([patientId])
}

model Image {
  id        Int      @id @default(autoincrement())
  imagePath      String?
  drclassification   DRClassification @relation(fields: [classificationId], references: [id])
  classificationId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@index([classificationId])
}

enum Role {
  USER
  ADMIN
}
enum Gender {
  Male
  Female
}
enum Status {
  active
  deactivated
  inactive
}
